// Question - For two strings s and t, we say "t divides s" if and only if s = t + ... + t (i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

// function below
 
 
 
 string gcdOfStrings(string str1, string str2) {
        
        string small_str , large_str;
        
        if(str1.length() >= str2.length())
        {
             small_str = str2;
             large_str = str1;
        }
         else
         {
            small_str = str1;
            large_str = str2;
         }
        
       
         auto found = large_str.find(small_str);
         if (found != string::npos)
         { 
            int size = __gcd(large_str.length(), small_str.length());
             
             string ans = small_str.substr(0, size);
             string new_str = "";
             
             for(int i=1;i<=large_str.length()/size; ++i)
             {
                new_str = new_str + ans;
             }
             
             if(new_str == large_str)
                 return ans;
             else
                 return "";
         }
        else
        {
            return "";
        }
         
            
    }
