//Ques-Serialization is to store a tree in an array so that it can be later restored and Deserialization is reading tree back from the array. Now your task is to complete the function serialize which stores the tree into an array A[ ] and deSerialize which deserializes the array to the tree and returns it.
Note: The structure of the tree must be maintained. Multiple nodes can have the same data.

//function below


struct Node
{
    int data;
    Node* left;
    Node* right;
};

void helper2(Node *root,vector<int>&a) 
    {
        if(root==NULL)
        {
            a.push_back(int(NULL));
            return;
        }
        a.push_back(root->data);
        helper2(root->left,a);
        helper2(root->right,a);
        return ;
        
    }
    //Function to serialize a tree and return a list containing nodes of tree.
    vector<int> serialize(Node *root) 
    {
        //Your code here
         vector<int>a;
         helper2(root,a);
         return a;
    }
    
    //Function to deserialize a list and construct the tree.
       int idx=0;
    Node * deSerialize(vector<int> &a)
    {
       //Your code here
      if((a.size()-1)<idx||a[idx]==NULL)
       {
           idx++;
           return NULL;
       }
       Node*root=new Node(a[idx]); idx++;
       root->left=deSerialize(a);
       root->right=deSerialize(a);
       return root;
    }
    
