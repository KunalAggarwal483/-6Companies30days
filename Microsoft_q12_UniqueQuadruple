//ques - Given an array of integers and another number. Find all the unique quadruple from the given array that sums up to the given number.


 vector<vector<int> > fourSum(vector<int> &arr, int k) {
        // Your code goes here
        int n = arr.size();
        vector<vector<int>> res;
        sort(arr.begin(), arr.end());
        
        for(int i=0; i<n; ++i)
        {
            int target2 = k - arr[i];
            
            for(int j= i+1; j<n; ++j)
            {   
                int target = target2  - arr[j];
                
                int left = j+1;
                int right = n-1;
                
                while(left<right)
                {
                   int sum = arr[left] + arr[right];
                   
                   if(sum < target) left++;
                   
                   else if(sum > target) right--;
                   
                 else
                 {
                     vector<int> quad(4,0);
                     quad[0] = arr[i];    
                     quad[1] = arr[j];
                     quad[2] = arr[left];
                     quad[3] = arr[right];
                     res.push_back(quad);
                    
                     
                     while(left<right and arr[left] == quad[2]) left++;
                     
                     while(left<right and arr[right] == quad[3]) right--;
                     
                 }
                   
                   
                }
                
                while(j+1<n and arr[j+1] == arr[j]) j++;
            }
            
            while(i+1<n and arr[i+1] == arr[i]) i++;
        }
        
        return res;
    }
