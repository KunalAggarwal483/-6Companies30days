//Question - Given an unsorted array Arr of size N of positive integers. One number 'A' from set {1, 2, â€¦N} is missing and one number 'B' occurs twice in array. Find these two numbers.



int *findTwoElement(int *arr, int n) {
        // code here
        int sum = 0;
        int repeatNo = 0;
        int actual_sum = 0;
        int M = 1000000007;
        
        for(int i = 0; i<n; ++i)
        {
            sum = (sum%M + arr[i]%M)%M;
        }
        
        // long long actual_sum = n*(n+1)/2;
        for(int i = 1; i<= n; ++i)
        {
           actual_sum = (actual_sum%M + i%M)%M;
        }
        
        while(repeatNo == 0)
        {
        for(int i = 0; i<n; ++i)
        {   
            if(i == 0 && arr[i] == n)
            continue;
            
            if(arr[i] == n)
            {
                int temp2 = arr[0];
                
                if(temp2 == n)
                {
                     repeatNo = n;
                     break;
                }
                arr[0] = n;
                arr[i] = temp2;
            }
            else
            {
            if(arr[i] != i)
           {  
            int temp = arr[arr[i]];
            
            if(temp == arr[i])
            {
              repeatNo = arr[i];
              break;
            }
            else
            arr[arr[i]] = arr[i];
            
            arr[i] = temp;
           }
            }
        }
        }
        
        sum = sum - repeatNo;
        int missingNo = actual_sum - sum;
        
        int num[2] = {repeatNo, missingNo};
        int *ans = num;
        
        return ans;
        
    }
    
//     int *findTwoElement(int *arr, int n) {  // improved version
//       int *res=new int[2];
//       for(int i=0;i<n;i++){
//           if(arr[abs(arr[i])-1]>0){
//               arr[abs(arr[i])-1]=-1*arr[abs(arr[i])-1];
//           }
//           else{
//               res[0]=abs(arr[i]);
//           }
//       }
//       for(int i=0;i<n; i++){
//           if(arr[i]>0){
//               res[1]=i+1;
//           }
//       }
//       return res;
//   }
